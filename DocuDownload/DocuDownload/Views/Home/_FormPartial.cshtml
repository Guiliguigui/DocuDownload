@using Microsoft.AspNetCore.Http

<script src="~/lib/jquery/dist/jquery.js"></script> @*retirer à la fin du dev*@
<script>
    var dwInfos = {};
    var remainingDwFieldsList = {};
    var dwTypeMatch = {
        "Text": "text",
        "Keyword": "text",
        "Numeric": "number", //double
        "Memo": "text",
        "Decimal": "number", //double
        "Date": "date", //double
        "DateTime": "date", //double
        "Table": "text"
    };

    $(document).ready(function () {
        $.post("DocuWareInfos",
            {
                docuwareURI: '@Context.Session.GetString("docuwareURI")',
                userLogin: '@Context.Session.GetString("userLogin")',
                userPassword:'@Context.Session.GetString("userPassword")'
            },
            function (data) {
                dwInfos = data;
                $.each(dwInfos, function (org, fcs) {
                    $("<option />")
                        .attr("value", org)
                        .html(org)
                        .appendTo("#organization");
                });

                $("#organization").change(updateFromOrganization).change();
                $("#fileCabinet").change(updateFromFileCabinet);
                $("#dialog").change(updateFromDialog);
                
                //console.log(dwInfos);
            }
        );
        $.post('GetUserExtractions',
            { userLogin: '@Context.Session.GetString("userLogin")' },
            function (data) {
                //$.each($(`#selectExtraction option`), function () {
                //    if (this.value != "newExtraction") {this.remove()}
                //})
                $.each(data, function (key, value) {
                    $("<option />")
                        .attr("value", value)
                        .html(value)// + `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>"`)
                        .appendTo("#extraction");
                    $("#extraction").change(updateFromExtraction);
                });
            }
        );

        $("#nameExtraction").change(function () {
            if (isValid($('#nameExtraction').val())) {
                $('#nameFeedBack').hide();
            }
            else {
                $('#nameFeedBack').show();
            }
        });
    });

    var isValid = (function () {
        let rg1 = /^[^\\/:\*\?"<>\|]+$/; // forbidden characters \ / : * ? " < > |
        let rg2 = /^\./; // cannot start with dot (.)
        let rg3 = /^(nul|prn|con|lpt[0-9]|com[0-9])(\.|$)/i; // forbidden file names
        return function isValid(fname) {
            return rg1.test(fname) && !rg2.test(fname) && !rg3.test(fname);
        }
    })();

    function updateFromOrganization() {
        let org = $("#organization").val();
        let lstFileCabinet = $("#fileCabinet");

        lstFileCabinet.empty();
        $.each(dwInfos[org], function (fc, ds) {
            $("<option />")
                .attr("value", fc)
                .html(fc)
                .appendTo(lstFileCabinet);
        });
        updateFromFileCabinet();
    }

    function updateFromFileCabinet() {
        let org = $("#organization").val();
        let fc = $("#fileCabinet").val();
        let lstDialog = $("#dialog");

        lstDialog.empty();
        $.each(dwInfos[org][fc], function (d, fs) {
            $("<option />")
                .attr("value", d)
                .html(d)
                .appendTo(lstDialog);
        });
        updateFromDialog();
    }

    function updateFromDialog() {
        let maxLines = Object.keys(dwInfos[$("#organization").val()][$("#fileCabinet").val()][$("#dialog").val()]).length;
        while ($('tr').length > maxLines+1) {
            $('tr')[maxLines].remove();
        }
        $('tr select[id*=selectFields]').each(function () {
            updateDwFields(`#`+this.id);
        });
    }

    function updateDwFields(select) {
        let org = $("#organization").val();
        let fc = $("#fileCabinet").val();
        let dia = $("#dialog").val();
        let selectFields = $(select);
        selectFields.empty();
        $.each(dwInfos[org][fc][dia], function (f, infos) {
            $("<option />")
                .attr("value", f)
                .html(infos[0])
                .appendTo(selectFields);
        });
        
        selectFields.unbind('change');
        selectFields.change(function () { onChangeField(selectFields.parent().parent().attr('id')) }).change();
    }

    function onChangeField(rowNumber){
        let org = $("#organization").val();
        let fc = $("#fileCabinet").val();
        let dia = $("#dialog").val();
        let fieldType = dwTypeMatch[dwInfos[org][fc][dia][$(`#selectFields${rowNumber}`).val()][1]];
        $(`.tdValues${rowNumber}`).remove();
        if (fieldType == "text") {
            $(`#${rowNumber}`).append(`
                <td colspan="2" class="tdValues${rowNumber}">
                    <input type="text" class="form-control" id="value${rowNumber}"/>
                </td>
            `);
            $(`#value${rowNumber}`).attr("type", fieldType)
        }
        else {
            $(`#${rowNumber}`).append(`
                <td class="tdValues${rowNumber}">
                    <input type="text" class="form-control" id="valueFrom${rowNumber}" />
                </td>
                <td class="tdValues${rowNumber}">
                    <input type="text" class="form-control" id="valueTo${rowNumber}" />
                </td>
            `);
            $(`#valueFrom${rowNumber}`).attr("type", fieldType)
            $(`#valueTo${rowNumber}`).attr("type", fieldType)
        }
    }

    function addNewField() {
        if ($('tr').length > Object.keys(dwInfos[$("#organization").val()][$("#fileCabinet").val()][$("#dialog").val()]).length) {
            alert("Vous avez suffisament de ligne pour rechercher sur tout les champs de la boite de recherche !");
            return;
        }
        
        let rowNumber = $('#lastRow').prev().length ? parseInt($('#lastRow').prev().attr('id'))+1 : 1;
        
        let newRow = $(`
            <tr id="${rowNumber}">
                <td><a id="removeButton${rowNumber}" role="button"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-minus-square"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line></svg></a></td>
                <td>
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input " id="check${rowNumber}">
                        <label class="custom-control-label" for="check${rowNumber}"></label>
                    </div>
                </td>
                <td>
                    <input class="form-control" type="number" min="0" id="hierarchyNumber${rowNumber}" style="width: 60px;" disabled>
                </td>
                <td>
                    <select class="form-control form-select" id="selectFields${rowNumber}">
                    </select>
                </td>
                <div id="values${rowNumber}">
                </div>
            </tr>
        `);
        newRow.insertBefore($('#lastRow'));
        $(`#removeButton${rowNumber}`).click(function () { newRow.remove(); });
        updateDwFields(`#selectFields${rowNumber}`);
        
        //$(`#check${rowNumber}`).change(function () {
        //    if (.prop(":checked")) {
        //        $(`#hierarchyNumber${rowNumber}`).prop('disabled', false);
        //    } else {
        //        $(`#hierarchyNumber${rowNumber}`).prop('disabled', true);
        //    }
        //});
        //$(`#hierarchyNumber${rowNumber}`).change(function () {
        //    alert("test");
        //});

    }

    function checkHierachy() {

    }

    function updateFromExtraction() {

    }

    function downloadZip() {
        // verifier les champs doublons
    }

</script>
<div class="mb-3 row justify-content-center">
    <label class="col-md-4 col-form-label">Extraction :</label>
    <div class="col-md-8">
        <select class="form-control form-select" id="extraction">
            <option value="newExtraction" selected>Nouvelle extraction</option>
        </select>
    </div>
</div>
<div class="mb-3 row justify-content-center">
    <label class="col-md-4 col-form-label">Nom de l'extraction :</label>
    <div class="col-md-8">
        <input id="nameExtraction" type="text" class="form-control" placeholder="Nom" />
    </div>
    @*<label class="col-md-4 text-danger" id="nameFeedBack">Veuillez saisir un nom valide pour la nouvelle extraction</label> Trouver le bon input*@
</div>
<div class="mb-3 row justify-content-center">
    <label class="col-md-4 col-form-label">Organisation :</label>
    <div class="col-md-8">
        <select class="form-control form-select" id="organization"></select>
    </div>
</div>
<div class="mb-3 row justify-content-center">
    <label class="col-md-4 col-form-label">Armoire :</label>
    <div class="col-md-8">
        <select class="form-control form-select" id="fileCabinet"></select>
    </div>
</div>
<div class="mb-3 row justify-content-center">
    <label class="col-md-4 col-form-label">Boite de recherche :</label>
    <div class="col-md-8">
        <select class="form-control form-select" id="dialog"></select>
    </div>
</div>
<div class="mb-3 row justify-content-center">
    <div class="col-md-12">
        <table class="table table-hover table-bordered" id="fieldList">
            <thead>
                <tr><th scope="col" style="width: 7%"></th> <th scope="col" colspan="2" style="width: 18%">Arborescence</th> <th scope="col" style="width: 25%">Champs</th> <th scope="col" colspan="2" style="width: 50%">Valeurs</th></tr>
                <tr><th scope="col"></th> <th scope="col"></th> <th scope="col" style="width: 12%">Position</th> <th scope="col"></th> <th scope="col" style="width: 25%">De :</th> <th scope="col" style="width: 25%">A :</th></tr>
            </thead>
            <tbody>
                <tr id="lastRow">
                    <td>
                        <a onclick="addNewField()" role="button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus-square"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line></svg>
                        </a>
                    </td>
                    <td colspan="5"></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<div class="mb-3 row justify-content-center justify-content-center">
    <div class="col-md-12">
        <div class="custom-control custom-switch">
            <input type="checkbox" class="custom-control-input" id="publicSwitch">
            <label class="custom-control-label" for="publicSwitch">Rendre cette extraction publique (tout les utilisateur de DocuDownload la verront)</label>
        </div>
    </div>
</div>
<div class="mb-3 row justify-content-center">
    <button class="btn btn-primary "><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-download"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg> Télécharger l'archive</button>
    <p class="col-md-1"></p>
    <button class="btn btn-primary "><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-save"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline></svg> Enregistrer l'extraction</button>
</div>


